# initital agent for each rank

# Agent Type:  0 <= Type < 1000
FIRM_TYPE: &FIRM_TYPE 0
CEN_PLANNER_TYPE: &CEN_PLANNER_TYPE 1
CEN_PLANNER_REPORTER_TYPE: &CEN_PLANNER_REPORTER_TYPE 2
COMM_BANK_TYPE: &COMM_BANK_TYPE 3
CEN_BANK_TYPE: &CEN_BANK_TYPE 4
HOUSEHOLD_TYPE: &HOUSEHOLD_TYPE 5

CREDIT_MARKET_TYPE: &CREDIT_MARKET_TYPE 100
CONSUMPTION_MARKET_TYPE: &CONSUMPTION_MARKET_TYPE 101
LABOR_MARKET_TYPE: &LABOR_MARKET_TYPE 102

# -------------- Agent Parameters ------------------

agent_params:
  *FIRM_TYPE:
    param_name: [order duration min, order duration max, recipe, L prod, max order production, assets' useful life, planned markup, order observation frequency min, order observation frequency max, production type]
    &ConFirm_1 0: &ConFirm_1_template
      labor: [1, 9, int]
      capital: [100, 450, float]
      minOrderDuration: 1
      maxOrderDuration: 1
      recipe: 50
      laborProductivity: 0.6
      maxOrderProduction: 6
      assetsUsefulLife: 12
      plannedMarkup: 0.10
      orderObservationFrequency: [5, 10, int]
      productionType: 0
    &CapFirm_1 1:
      <<: *ConFirm_1_template
      minOrderDuration: 2
      maxOrderDuration: 4
      productionType: 1
    &ConFirm_2 2: &ConFirm_2_template
      <<: *ConFirm_1_template
      labor: [10, 49, int]
      capital: [1200, 2400, float]
      laborProductivity: 0.7
      maxOrderProduction: 50
      plannedMarkup: 0.30
      productionType: 0
    &CapFirm_2 3:
      <<: *ConFirm_2_template
      minOrderDuration: 2
      maxOrderDuration: 4
      productionType: 1
    &ConFirm_3 4: &ConFirm_3_template
      <<: *ConFirm_2_template
      labor: [50, 249, int]
      capital: [8000, 16000, float]
      minOrderDuration: 2
      maxOrderDuration: 4
      recipe: 70
      laborProductivity: 0.7
      maxOrderProduction: 250
      plannedMarkup: 0.20
      orderObservationFrequency: [10, 15, int]
      productionType: 0
    &CapFirm_3 5:
      <<: *ConFirm_3_template
      minOrderDuration: 4
      maxOrderDuration: 8
      productionType: 1
    &ConFirm_4 6: &ConFirm_4_template
      <<: *ConFirm_3_template
      labor: [250, 1000, int]
      capital: [30000, 70000, float]
      minOrderDuration: 6
      maxOrderDuration: 12
      recipe: 80
      laborProductivity: 0.8
      maxOrderProduction: 500
      plannedMarkup: 0.30
      orderObservationFrequency: [15, 20, int]
      productionType: 0
    &CapFirm_4 7:
      <<: *ConFirm_4_template
      minOrderDuration: 12
      maxOrderDuration: 24
      productionType: 1

  *COMM_BANK_TYPE:
    param_name: [depositInterestRate, loanInterestRate]
    &default_bank 0:
#      depositInterestRate: 0.001
#      loanInterestRate: 0.0012
#      targetedLiquidityRatio: 0.17
#      capitalAdequacyRatio: 0.06

      depositInterestRate: 0.001
      loanInterestRate: 0.0012
      targetedLiquidityRatio: 0.17
      capitalAdequacyRatio: 0.06

  *HOUSEHOLD_TYPE:
    param_name: []
    &default_household 0:

  *CEN_BANK_TYPE:
    param_name: [advanceInterestRate]
    &default_cen_bank 0:
#      advanceInterestRate: 0.0001
      advanceInterestRate: 0.0001

  *CEN_PLANNER_TYPE:
    param_name: []
    &default_cen_planner 0:
      #incrementAndSubstitutions = 'zero', 'random', 'total', 'proportionally' # to be accorded with the name of the folder in the experiments
      incrementAndSubstitutions: 'proportionally'
      #askingMaxInvGoodsProduction = 'min', 'regular', 'max' # to be accorded with the name of the folder in the experiments -> PropMin, PropMax
      # relevant only under the case of incrementAndSubstitutions = 'proportionally'
      askingInvGoodsProduction: 'max' # OR 'regular' (basic option) OR 'min' OR 'max'
      investmentVariation: 0.8 # positive or negative in (-1,+1)
      #used as 1+investmentVariation for the cases 'min' (must be negative) or 'max' (must be positive)
      #################################################
      #order generation (alternatively)
      noOrderGeneration: false
      randomOrderGeneration: true
      #################################################
      #modify duration
      durationCoeff: 2


  *CREDIT_MARKET_TYPE:
    param_name: []
    &default_credit_market 0:
      nround: 1

  *CONSUMPTION_MARKET_TYPE :
    param_name: [ ]
    &default_consumption_market 0:
      nround: 10

  *LABOR_MARKET_TYPE :
    param_name: [ ]
    &default_labor_market 0:
      nround: 10


agent_resources:
  *COMM_BANK_TYPE:
    &default_bank_resource 0:
      rs_max: 1000
      rs_min: 1000

  *HOUSEHOLD_TYPE:
    &default_household_resource 0:
      dp_max: 100
      dp_min: 100

  *CEN_BANK_TYPE:
    &default_cen_bank_resource 0:

  *CEN_PLANNER_TYPE:
    &default_cen_planner_resource 0:
      dp: 10000







# mean or specific distribution of agents
agent_distribute_mode: mean


#  ------------- create not unique agents （Each core has the same distribution） ----------------------
# total_amount: Total number of agent for the overall system (all machine)
# rank_weight: Ratio of number of agents per rank : (not fill) or list[rankNum]
# local_distribute： Distribution of different types of agents in each rank

ini_agents_uniform:
  *FIRM_TYPE:
    total_amount: 100
    rank_weight:
    local_distribute:
      com_firm1:
        share: 0.843
        paramGroup:
          # parameter group
          *ConFirm_1
        resourceGroup:
        isGlobal: false
      capFirm1:
        share: 0.094
        paramGroup:
          # parameter group
          *CapFirm_1
        resourceGroup:
        isGlobal: false
      com_firm2:
        share: 0.034
        paramGroup:
          # parameter group
          *ConFirm_2
        resourceGroup:
        isGlobal: false
      capFirm2:
        share: 0.017
        paramGroup:
          # parameter group
          *CapFirm_2
        resourceGroup:
        isGlobal: false
      com_firm3:
        share: 0.003
        paramGroup:
          # parameter group
          *ConFirm_3
        resourceGroup:
        isGlobal: false
      capFirm3:
        share: 0.003
        paramGroup:
          # parameter group
          *CapFirm_3
        resourceGroup:
        isGlobal: false
      com_firm4:
        share: 0.003
        paramGroup:
          # parameter group
          *ConFirm_4
        resourceGroup:
        isGlobal: false
      capFirm4:
        share: 0.003
        paramGroup:
          # parameter group
          *CapFirm_4
        resourceGroup:
        isGlobal: false

  *COMM_BANK_TYPE:
    total_amount: 100
    rank_weight:
    local_distribute:
      local_banks:
        share: 0.2
        paramGroup:
          # parameter group
          *default_bank
        resourceGroup:
          *default_bank_resource
        isGlobal: false


      global_banks:
        share: 0.8
        paramGroup:
          # parameter group
          *default_bank
        resourceGroup:
          *default_bank_resource
        isGlobal: true

  *HOUSEHOLD_TYPE :
    total_amount: 1000
    rank_weight:
    local_distribute:
      local_household:
        share: 1
        paramGroup:
          *default_household
        resourceGroup:
          *default_household_resource
        isGlobal: False

#  ------------------------- create not unique agent for each rank separately-------------------------
ini_agents_specific:
  0:
    *COMM_BANK_TYPE:
      total_amount: 25
      rank_weight:
      local_distribute:
        local_banks:
          share: 0.2
          paramGroup:
            # parameter group
            *default_bank
          resourceGroup:
            *default_bank_resource
          isGlobal: false


        global_banks:
          share: 0.8
          paramGroup:
            # parameter group
            *default_bank
          resourceGroup:
            *default_bank_resource
          isGlobal: true

    *HOUSEHOLD_TYPE :
      total_amount: 250
      rank_weight:
      local_distribute:
        local_household:
          share: 1
          paramGroup:
            *default_household
          resourceGroup:
            *default_household_resource
          isGlobal: False

  1:
    *COMM_BANK_TYPE:
      total_amount: 25
      rank_weight:
      local_distribute:
        local_banks:
          share: 0.2
          paramGroup:
            # parameter group
            *default_bank
          resourceGroup:
            *default_bank_resource
          isGlobal: false


        global_banks:
          share: 0.8
          paramGroup:
            # parameter group
            *default_bank
          resourceGroup:
            *default_bank_resource
          isGlobal: true

    *HOUSEHOLD_TYPE :
      total_amount: 250
      rank_weight:
      local_distribute:
        local_household:
          share: 1
          paramGroup:
            *default_household
          resourceGroup:
            *default_household_resource
          isGlobal: False

  2:
    *COMM_BANK_TYPE:
      total_amount: 25
      rank_weight:
      local_distribute:
        local_banks:
          share: 0.2
          paramGroup:
            # parameter group
            *default_bank
          resourceGroup:
            *default_bank_resource
          isGlobal: false


        global_banks:
          share: 0.8
          paramGroup:
            # parameter group
            *default_bank
          resourceGroup:
            *default_bank_resource
          isGlobal: true

    *HOUSEHOLD_TYPE :
      total_amount: 250
      rank_weight:
      local_distribute:
        local_household:
          share: 1
          paramGroup:
            *default_household
          resourceGroup:
            *default_household_resource
          isGlobal: False

  3:
    *COMM_BANK_TYPE:
      total_amount: 25
      rank_weight:
      local_distribute:
        local_banks:
          share: 0.2
          paramGroup:
            # parameter group
            *default_bank
          resourceGroup:
            *default_bank_resource
          isGlobal: false


        global_banks:
          share: 0.8
          paramGroup:
            # parameter group
            *default_bank
          resourceGroup:
            *default_bank_resource
          isGlobal: true

    *HOUSEHOLD_TYPE :
      total_amount: 250
      rank_weight:
      local_distribute:
        local_household:
          share: 1
          paramGroup:
            *default_household
          resourceGroup:
            *default_household_resource
          isGlobal: False


#  ------------------------- create unique agents  ----------------------
#  if agent need to communicate with other machines, isGlobal should be true else false
#  if isGlobal is true, it will greate a unique global agent in specific_rank (default is 0)
#  otherwise, it will create a unique agent in each rank

ini_agents_unique:
  *CEN_BANK_TYPE :
    isGlobal: true
    specific_rank:
    paramGroup:
      [*default_cen_bank]
    resourceGroup:
      *default_cen_bank_resource

  *CEN_PLANNER_TYPE :
    isGlobal: true
    specific_rank:
    paramGroup:
      [*default_cen_planner]
    resourceGroup:
      *default_cen_planner_resource

  *CREDIT_MARKET_TYPE :
    isGlobal: true
    specific_rank:
    paramGroup:
      [*default_credit_market]
    resourceGroup:

  *CONSUMPTION_MARKET_TYPE :
    isGlobal: false
    specific_rank:
    paramGroup:
      [*default_consumption_market]
    resourceGroup:

  *LABOR_MARKET_TYPE :
    isGlobal: false
    specific_rank:
    paramGroup:
      [*default_labor_market]
    resourceGroup:
